#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors/studio_unlock.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

// Left bottom row pinky 2nd column

#ifndef LB5

#define LB5 24

#endif

// Right bottom row pinky 2nd column
#ifndef RB5

#define RB5 35

#endif

#define DEF 0
#define WIN 1
#define SWP 2
#define SYM 3
#define NUM 4
#define ADJ 5
#define QUICK_TAP_MS 175

&sk {
    release-after-ms = <600>;
    quick-release;
};

/ {
    /* assign `input-listener` to all pointing devices */
    /* &glidepoint0 on central, &glidepoint1 on peripheral */

    tpad_central_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&glidepoint0>;
        y-invert;
        scale-multiplier = <2>;

        // xy-swap;
        // x-invert;
    };

    tpad_peripheral_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&glidepoint1>;
        layers = <DEF WIN SWP SYM ADJ>;
        y-invert;
        scale-multiplier = <2>;

        /* NOTE: do NOT override event code here, */
        /*       let Cirque glidepoint reports click from taps */
        // evt-type = <INPUT_EV_REL>;
        // x-input-code = <INPUT_REL_X>;
        // y-input-code = <INPUT_REL_Y>;
    };

    tpad_peripheral_scroll {
        compatible = "zmk,input-behavior-listener";
        device = <&glidepoint1>;
        layers = <NUM>;

        /* NOTE: only apply input-code overriding for INPUT_EV_REL */

        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_MISC>;
        y-input-code = <INPUT_REL_WHEEL>;
        bindings = <&ib_wheel_scaler 1 8>;
    };

    ib_wheel_scaler: ib_wheel_scaler {
        compatible = "zmk,input-behavior-scaler";
        #binding-cells = <2>;
        evt-type = <INPUT_EV_REL>;
        input-code = <INPUT_REL_WHEEL>;
    };
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <SYM NUM>;
            then-layer = <ADJ>;
        };
    };

    combos {
        compatible = "zmk,combos";

        caps {
            timeout-ms = <50>;
            key-positions = <LB5 RB5>;
            bindings = <&caps_word>;
        };

        // symbols

        cb_excl {
            bindings = <&kp EXCL>;
            key-positions = <1 13>;
            timeout-ms = <30>;
        };

        cb_at {
            bindings = <&kp AT>;
            key-positions = <2 14>;
            timeout-ms = <30>;
        };

        cb_hash {
            bindings = <&kp HASH>;
            key-positions = <3 15>;
            timeout-ms = <30>;
        };

        cb_dllr {
            bindings = <&kp DLLR>;
            key-positions = <4 16>;
            timeout-ms = <30>;
        };

        cb_prcnt {
            bindings = <&kp PRCNT>;
            key-positions = <5 17>;
            timeout-ms = <30>;
        };

        cb_caret {
            bindings = <&kp CARET>;
            key-positions = <6 18>;
            timeout-ms = <30>;
        };

        cb_amps {
            bindings = <&kp AMPS>;
            key-positions = <7 19>;
            timeout-ms = <30>;
        };

        cb_mult {
            bindings = <&kp ASTERISK>;
            key-positions = <8 20>;
            timeout-ms = <30>;
        };

        cb_lparen {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <9 21>;
            timeout-ms = <30>;
        };

        cb_rparen {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <10 22>;
            timeout-ms = <30>;
        };
    };

    behaviors {
        lt_qk: layer_toggle_quick {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <150>;
            quick-tap-ms = <QUICK_TAP_MS>;
            bindings = <&mo>, <&kp>;
        };

        mt_sk: mod_tap_sticky {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <150>;
            quick-tap-ms = <200>;
            bindings = <&sk>, <&kp>;
        };

        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        lswp: left_swp {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sk LGUI>, <&mo 2>, <&tog 2>;
        };

        rswp: right_swap {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sk RGUI>, <&mo 2>, <&tog 2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            display-name = "Base";
            bindings = <
&trans  &kp Q               &kp W           &kp E        &kp R        &kp T      &kp Y  &kp U        &kp I            &kp O            &kp P         &trans
&trans  &mt LEFT_COMMAND A  &mt LEFT_ALT S  &mt LCTRL D  &mt LSHFT F  &kp G      &kp H  &mt RSHFT J  &mt RCTRL K      &mt RIGHT_ALT L  &mt RCMD SQT  &trans
&trans  &lt 3 Z             &mt_sk LALT X   &kp C        &kp V        &kp B      &kp N  &kp M        &kp COMMA        &kp DOT          &lt 3 SLASH   &trans
                                            &trans                                                   &trans
        &trans              &lt 4 ESC       &lt 1 SPACE  &lt 2 TAB                      &lt 6 ENTER  &lt 5 BACKSPACE  &lt 7 DEL        &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        nav_layer {
            display-name = "Navigation";
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans      &kp K_REDO  &kp K_PASTE  &kp K_COPY     &kp K_CUT    &kp K_UNDO  &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans      &kp CAPS    &kp LEFT     &kp DOWN       &kp UP       &kp RIGHT   &trans
&trans  &trans    &trans    &trans     &trans     &trans      &kp INS     &kp HOME     &kp PAGE_DOWN  &kp PAGE_UP  &kp END     &trans
                            &trans                                                     &trans
        &trans    &trans    &trans     &trans                             &kp RET      &kp BSPC       &kp DEL      &trans
            >;
        };

        mouse_layer {
            display-name = "Mouse";
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans      &kp K_REDO  &kp K_PASTE     &kp K_COPY      &kp K_CUT     &kp K_UNDO       &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans      &trans      &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans
&trans  &trans    &trans    &trans     &trans     &trans      &trans      &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &trans
                            &trans                                                        &trans
        &trans    &trans    &trans     &trans                             &mkp RCLK       &mkp LCLK       &mkp MCLK     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        button_layer {
            display-name = "Buttons";
            bindings = <
&trans  &kp K_UNDO  &kp K_CUT  &kp K_COPY  &kp K_PASTE  &kp K_REDO      &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR   &kp RPAR  &kp BSPC
&trans  &kp LGUI    &kp LALT   &kp LCTRL   &kp LSHFT    &trans          &trans     &kp RSHFT  &kp RCTRL        &kp RALT   &kp RGUI  &kp GRAVE
&trans  &trans      &trans     &trans      &trans       &trans          &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC   &kp PIPE  &kp TILDE
                               &trans                                                         &trans
        &trans      &mkp MCLK  &mkp LCLK   &mkp RCLK                               &mkp RCLK  &mkp LCLK        &mkp MCLK  &trans
            >;

            sensor-bindings = <&inc_dec_kp UP DOWN &inc_dec_kp C_NEXT C_PREV>;
        };

        media_layer {
            display-name = "Media";
            bindings = <
&kp TAB  &ht F1 N1  &ht F2 N2  &ht F3 N3  &ht F4 N4  &ht F5 N5      &ht F6 N6  &ht F7 N7  &ht F8 N8  &ht F9 N9  &ht F10 N0  &trans
&trans   &trans     &trans     &trans     &trans     &trans         &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &trans      &trans
&trans   &trans     &trans     &trans     &trans     &trans         &kp HOME   &kp PG_DN  &kp PG_UP  &kp END    &trans      &trans
                               &trans                                                     &trans
         &trans     &trans     &trans     &trans                               &trans     &trans     &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp HOME END &inc_dec_kp C_NEXT C_PREV>;
        };

        num_layer {
            display-name = "Numbers";
            bindings = <
&bootloader  &rgb_ug RGB_TOG    &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI      &out OUT_TOG    &trans    &trans      &trans        &trans      &bootloader
&sys_reset   &rgb_ug RGB_EFF    &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD      &studio_unlock  &trans    &trans      &trans        &trans      &sys_reset
&bt BT_CLR   &bt BT_SEL 0       &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4         &kp C_PREV      &kp C_PP  &kp C_NEXT  &kp C_VOL_UP  &kp C_MUTE  &kp C_VOL_DN
                                                 &trans                                                                           &trans
             &ext_power EP_TOG  &to WIN          &trans           &trans                                                &trans    &trans      &to DEF       &trans
            >;

            // F15 and F14 are brightness controls for macOS

            sensor-bindings = <&inc_dec_kp F15 F14 &inc_dec_kp PG_UP PG_DN>;
        };

        sym_layer {
            bindings = <
&trans  &kp LS(LBRC)   &kp LS(AMPS)  &kp LS(STAR)   &kp LS(LPAR)   &kp LS(RBRC)      &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp LS(COLON)  &kp LS(DLLR)  &kp LS(PRCNT)  &kp LS(CARET)  &kp LS(PLUS)      &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&trans  &kp LS(TILDE)  &kp LS(EXCL)  &kp LS(AT)     &kp LS(POUND)  &kp LS(PIPE)      &trans  &trans     &trans     &trans    &trans    &trans
                                     &trans                                                             &trans
        &trans         &kp LS(LPAR)  &kp LS(RPAR)   &kp LS(UNDER)                            &trans     &trans     &trans    &trans
            >;

            label = "Symbols";
        };

        fnc_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
                        &trans                                      &trans
        &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans
            >;

            label = "Functions";
        };
    };
};
